Esercizio 1: Linguaggio C (obbligatorio) 20 punti
Lo scopo di questo esercizio Ã¨ di scrivere un programma che usando la system call signalfd quando riceve un
segnale SIGUSR1 o SIGUSR2 scriva in un file della directory corrente con nume uguale al pid del processo che ha
inviato il segnale, il tipo di segnale ricevuto e l'ora esatta di ricezione del segnale. (se il file non esiste deve essere
creato).
un esempio di file risultante potrebbe essere:
$ cat 20231
USR1 Fri Sep 21 10:40:56 CEST 2018
USR1 Fri Sep 21 10:40:58 CEST 2018
USR2 Fri Sep 21 10:41:26 CEST 2018



Esercizio 2: Linguaggio C: 10 punti
Dato un estratto di un file di log come questo:
Sep 20 19:58:32 eipi ntpd[2051]: Listen normally on 99 eth0 [fe80::8456:a70]:123
Sep 20 19:58:32 eipi ntpd[2051]: new interface(s) found: waking up resolver
Sep 20 19:58:34 eipi ntpd[2051]: Soliciting pool server 151.3.106.211
Sep 20 19:58:35 eipi ntpd[2051]: Soliciting pool server 94.177.187.22
Sep 20 19:58:48 eipi ntpd[2051]: Soliciting pool server 80.211.155.206
Sep 20 19:58:49 eipi ntpd[2051]: Soliciting pool server 212.45.144.206
Scrivere un programma che lo mostri alla stessa velocita' allla quale e' stato generato.
In questo caso dovrebbe scrivere le prime dur righe, attendere 2 secondi, mostrare la terza, dopo un secondo la
quarta quindi dopo una attesa di 13 secondi la quinta e la sesta dopo un ulteriore secondo.



Esercizio 3: Python o bash: (10 punti):
Scrivere un programma python o uno script bash che trovi in un sottoalbero tutti i file che hanno come primi
caratteri '#!' e produca una tabella che elenchi tutti i pathname dei file trovati catalogando insieme i file che
hanno la stessa prima riga di testo.
es:
#!/bin/bash: first.sh myscript
#!/usr/bin/env python: prog.py