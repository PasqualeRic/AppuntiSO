Esercizio 1: Linguaggio C (obbligatorio) 20 punti
scrivere la funzione:
void printgroupdir(const char *dirp, const char *group);
che deve scandire la directory con pathname dirp e stampare tutti I file (non le directory) che appartengano al
gruppo passato come secondo parametro.
Creare I file printgroupdir.c, printgroupdir.h e un file testpgd.c contenente un programma principale che prenda
come argv[1] e argv[2] i due parametri della funzione. Produrre un Makefile opportuno.
Esempi per provare il funzionamento possono essere:
testpgd /dev tty
testpgd /dev disk



Esercizio 2: Linguaggio C: 10 punti
scrivere la funzione:
char **groupdir(const char *dirp, const char *group);
che deve scandire la directory con pathname dirp e cercare tutti I file (non le directory) che appartengano al gruppo
passato come secondo parametro.
Il valore di ritorno della funzione e’:
Il vettore dei nomi dei file trovati (allocato dinamicamente) con un elemento finale (char *) 0 per indicare la
conclusione dell’array (in modo simile al vettore argv usato in execve).
NULL se si sono verificati errori (ad es. La directory non esiste).
(se non vi sono file del gruppo cercato viene restituito un vettore contenente un solo elemento (char *) 0, non
NULL).
Scrivere inoltre una funzione:
void freestringarray(char **v);
che deallochi un vettore generato dalla groupdir;
Creare I file groupdir.c, groupdir.h e un file testgd.c contenente un programma principale che prenda come argv[1]
e argv[2] i due parametri della funzione e ne stampi il risultato. Produrre un Makefile opportuno.
Esempi per provare il funzionamento possono essere:
testgd /dev tty
testgd /dev disk



Esercizio 3: Script bash o Python: (10 punti):
Scrivere la funzione groupdir in python